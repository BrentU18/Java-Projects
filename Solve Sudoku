//@BrentU18
public class Sudoku {

    public static boolean valid(int[][] board, int row, int col, int num){
        return rowValid(board, row, col, num) &&
                colValid(board, row, col, num) &&
                gridValid(board, row, col, num);
    }
    private static boolean rowValid(int[][] board, int row, int col, int num) {
        for (int i = 0; i < board.length; i++) {
            if (board[row][i] == num) {
                return false;
            }
        }
        return true;
    }
    private static boolean colValid(int[][] board, int row, int col, int num) {
        for (int i = 0; i < board.length; i++) {
            if (board[i][col] == num) {
                return false;
            }
        }
        return true;
    }
    private static boolean gridValid(int[][] board, int row, int col, int num) {
        int startRow = row - row % 3;
        int startCol = col - col % 3;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[i + startRow][j + startCol] == num) {
                    return false;
                }
            }
        }
        return true;
    }
    public static boolean solve(int[][] board, int row, int col){
        if (col == board.length){
            col = 0;
            row++;
        }
        if(row == board.length) {
            return true;
        }
        if(board[row][col] != 0) {
            return solve(board, row, col+1);
        }
        for (int num = 1; num <= board.length ; num++) {
            if(valid(board, row, col, num)){
                board[row][col] = num;
                if (solve(board, row, col +1) == true){
                    return true;
                }
                board[row][col] = 0;
            }
        }
        return false;
    }
    public static void main(String[] args) {
        int[][] board = new int[9][9];
        if (solve(board, 0, 0)) {
            for (int[] row : board) {
                for (int num : row) {
                    System.out.print(num + " ");
                }
                System.out.println();
            }
        }
    }
}
